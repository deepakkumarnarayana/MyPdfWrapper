# Minimal HTTPS Setup - Just Certbot + Your App
# No complex nginx configuration, simple cron renewal

version: '3.8'

services:
  # Your PDF Reader App with direct SSL
  pdf-app:
    build: ../study-pdf-reader/backend
    container_name: pdf_app
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP (for Let's Encrypt challenge)
      - "443:443"  # HTTPS
    volumes:
      # SSL certificates
      - ./letsencrypt:/etc/letsencrypt:ro
      # Static files
      - ../study-pdf-reader/frontend/build:/app/static
    environment:
      - ENVIRONMENT=production
      - SSL_CERT_PATH=/etc/letsencrypt/live/yourdomain.com/fullchain.pem
      - SSL_KEY_PATH=/etc/letsencrypt/live/yourdomain.com/privkey.pem
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    command: >
      bash -c "
        if [ ! -f /etc/letsencrypt/live/yourdomain.com/fullchain.pem ]; then
          echo 'SSL certificates not found. Run setup-ssl-simple.sh first.'
          exit 1
        fi
        python -m uvicorn main:app --host 0.0.0.0 --port 443 
          --ssl-keyfile=/etc/letsencrypt/live/yourdomain.com/privkey.pem 
          --ssl-certfile=/etc/letsencrypt/live/yourdomain.com/fullchain.pem
      "
    networks:
      - pdf_network

  # Standalone Certbot (only for certificate management)
  certbot-standalone:
    image: certbot/certbot:latest
    container_name: pdf_certbot_standalone
    restart: "no"
    ports:
      - "80:80"  # Only when running
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot-logs:/var/log/letsencrypt
    profiles:
      - certbot  # Only run when explicitly called

networks:
  pdf_network:
    driver: bridge