# Production-Ready HTTPS Setup with Let's Encrypt & Auto-Renewal
# This solves the "chicken and egg" problem and provides automated certificate management

version: '3.8'

services:
  # Nginx Web Server with SSL Termination
  nginx:
    image: nginx:alpine
    container_name: pdf_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx configuration
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      
      # SSL certificates (shared with certbot)
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      
      # Static files
      - ./nginx/html:/var/www/html:ro
      
      # Logs
      - ./logs/nginx:/var/log/nginx
    
    depends_on:
      - pdf-backend
    
    networks:
      - pdf_network
    
    labels:
      - "com.docker.compose.project=pdf-reader"
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL Certificate Management
  certbot:
    image: certbot/certbot:latest
    container_name: pdf_certbot
    restart: "no"
    volumes:
      # Certificate storage (shared with nginx)
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt
    
    # Certificate renewal command
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    
    networks:
      - pdf_network

  # Your PDF Reader Backend
  pdf-backend:
    build:
      context: ../study-pdf-reader/backend
      dockerfile: Dockerfile
    container_name: pdf_backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - ENABLE_HSTS=true
      - ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
      - DATABASE_URL=sqlite+aiosqlite:///./storage/database.db
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    volumes:
      - ../study-pdf-reader/backend/storage:/app/storage
      - ./logs/backend:/app/logs
    
    networks:
      - pdf_network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Your PDF Reader Frontend (built and served by nginx)
  pdf-frontend:
    build:
      context: ../study-pdf-reader/frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_BASE_URL=https://yourdomain.com/api
        - REACT_APP_VERSION=1.0.0
    container_name: pdf_frontend_build
    volumes:
      - frontend_build:/app/build
    command: ["true"]  # Just build and exit

volumes:
  frontend_build:

networks:
  pdf_network:
    driver: bridge

# Environment variables file
# Create .env file with:
# DOMAIN=yourdomain.com
# EMAIL=admin@yourdomain.com
# CLAUDE_API_KEY=your_claude_api_key